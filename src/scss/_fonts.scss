@font-face {
  font-family: "Roboto Mono";
  font-style: normal;
  font-weight: 400;
  src: local("Roboto Mono"), local("RobotoMono-Regular"), url("https://fonts.gstatic.com/s/robotomono/v4/hMqPNLsu_dywMa4C_DEpY44P5ICox8Kq3LLUNMylGO4.woff2") format("woff2");
  unicode-range: U+0-FF, U+131, U+152-153, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;
}

@font-face {
  font-family: "Product Sans";
  font-style: normal;
  font-weight: 400;
  src: local("Product Sans"), local("ProductSans-Regular"), url("https://fonts.gstatic.com/s/productsans/v9/HYvgU2fE2nRJvZ5JFAumwegdm0LZdjqr5-oayXSOefg.woff2") format("woff2");
  unicode-range: U+0-FF, U+131, U+152-153, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;
}

$sizes: ("link": 0.875, "small": 0.875, "p": 1, "title": 2.25, "subtitle": 1.25, "h3": 1.5, "h4": 1.5);
$font-base: 16px;
$family-base: "Roboto", sans-serif;
$family-mono: "Roboto Mono", monospace;
$family-title: "Product Sans", sans-serif;

@function size-px($increase){
  @return $font-base*$increase;
}

@mixin text-size($class, $number){
  .content {
    &__text {
      &--#{$class} {
        @if $class == "link" {
          font-family: $family-mono;
        } @else if $class == "title" {
          font-family: $family-title;
          font-weight: normal;
        } @else if $class == "h3" {
          font-family: $family-title;
          font-weight: normal;
        } @else if $class == "h4" {
          font-family: $family-title;
          font-weight: normal;
        }@else {
          font-family: $family-base;
        }
        font-size: size-px($number);
      }
    }
  }
}

@each $class-name, $size in $sizes {
  @include text-size($class-name, $size);
}

.text-uppercase {
  text-transform: uppercase;
}

a {
  text-decoration: none;
}

li {
  list-style: none;
}

.list-inline {
  display: inline-block;
  padding: 21px;
}

@each $align in left, center, right, justify {
  .text-#{$align} {
    text-align: $align;
  }
}
